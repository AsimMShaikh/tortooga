@model TortoogaApp.ViewModels.ListingViewModels.ListingViewModel

@{
    Layout = "_MainLayout";
    ViewBag.Title = $"Edit Listing - {Model.ReferenceNumber}";
}

@section Scripts {
    <script type="text/javascript" src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
    <script type="text/javascript" src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
    <script type="text/javascript" src="~/lib/dropzone/dist/dropzone.js"></script>
    <link type="text/css" rel="stylesheet" href="~/lib/dropzone/dist/dropzone.css" />

    <script type="text/javascript">
        $().ready(function () {

            Dropzone.options.listingForm = {

                // The configuration we've talked about above
                autoProcessQueue: false,
                uploadMultiple: true,
                parallelUploads: 100,
                addRemoveLinks: true,
                maxFiles: 3,
                previewsContainer: '.dropzone-previews',

                // The setting up of the dropzone
                init: function () {
                    var myDropzone = this;

                    // First change the button to actually tell Dropzone to process the queue.
                    this.element.querySelector("button[type=submit]").addEventListener("click", function (e) {
                        // Make sure that the form isn't actually being sent.
                        e.preventDefault();
                        e.stopPropagation();
                        myDropzone.processQueue();
                    });

                    // Listen to the sendingmultiple event. In this case, it's the sendingmultiple event instead
                    // of the sending event because uploadMultiple is set to true.
                    this.on("sendingmultiple", function () {
                        // Gets triggered when the form is actually being sent.
                        // Hide the success button or the complete form.
                    });
                    this.on("successmultiple", function (files, response) {
                        // Gets triggered when the files have successfully been sent.
                        // Redirect user or notify of success.
                    });
                    this.on("errormultiple", function (files, response) {
                        // Gets triggered when there was an error sending the files.
                        // Maybe show form again, and notify user of error
                    });
                }

            }
        });
    </script>
}

    <div class="container">
        <div class="row">
            <h4 class="pull-left">Edit Listing</h4>
            <div class="pull-right"><strong>Reference Number: </strong>@Model.ReferenceNumber</div>
        </div>
        <div class="row">
            <div class="container">
                <div asp-validation-summary="All" class="text-warning"></div>
                <form asp-action="Edit" method="post" id="listingForm" enctype="multipart/form-data" class="dropzone" asp-antiforgery="true" role="form">
                    @Html.EditorForModel()
                    <input type="submit" class="btn btn-default btn-primary" value="Edit" />
                    @*TODO: Do delete, remember to prompt user and check for whether it has been booked, only show if is not and check out bootbox?*@
                    <input type="button" class="btn btn-danger pull-right" value="Delete" />
                </form>
            </div>
        </div>
    </div>